# This YAML file configures the EvAgg pipeline to run the full pipeline. By default it is configured to use the
# study set queries, but this can be overriden by setting the queries object to a custom set of queries, either
# here or in a command-line argument.

log:
  di_factory: lib.evagg.utils.init_logger
  level: INFO
  to_file: true

# Imported objects.
llm_client:
  di_factory: lib/config/objects/llm.yaml

# MCP client (optional - only needed for MCP-based implementations)
# mcp_client:
#   di_factory: lib.evagg.utils.create_mcp_client
#   env_vars:
#     di_factory: lib.evagg.utils.get_dotenv_settings
#   config:
#     mcp_servers:
#       pubtator:
#         command: "uv"
#         args: ["run", "pubtator-mcp-server", "--cache-dir", "${PUBTATOR_CACHE_DIR:-../../.cache}"]
#         cwd: "mcp/pubtator-mcp"

# Application.
di_factory: lib.evagg.PaperQueryApp
queries:
  di_factory: lib/config/queries/study_set.yaml
library:
  di_factory: lib.evagg.RareDiseaseLibraryCached
  paper_searcher:
    # Default: PubMed search via NCBI
    di_factory: lib.evagg.library.PubMedPaperSearcher
    web_client:
      di_factory: lib/config/objects/web_cache.yaml
    settings:
      di_factory: lib.evagg.utils.get_dotenv_settings
      filter_prefix: "NCBI_EUTILS_"
    # Alternative: MCP-based search (uncomment mcp_client above and use this instead)
    # di_factory: lib.evagg.library.MCPPaperSearcher
    # mcp_client: "{{mcp_client}}"
    # tool_name: "search_gene_variant_papers"
    # parameter_mapping:
    #   gene_symbol: "gene_symbol"
  paper_client:
    di_factory: lib/config/objects/ncbi_cache.yaml
  llm_client: "{{llm_client}}"
  allowed_categories:
    - "genetic disease"
extractor:
  di_factory: lib.evagg.PromptBasedContentExtractorCached
  fields:
    di_factory: lib/config/fields/evidence_all.yaml
  llm_client:
    di_factory: lib/config/objects/llm_cache.yaml
  phenotype_searcher:
    di_factory: lib.evagg.ref.WebHPOClient
    web_client:
      di_factory: lib/config/objects/web_cache.yaml
  phenotype_fetcher:
    di_factory: lib.evagg.ref.PyHPOClient    
  observation_finder:
    di_factory: lib.evagg.content.ObservationFinder
    llm_client: "{{llm_client}}"
    variant_factory: 
      di_factory: lib/config/objects/variant_factory_cache.yaml
    variant_comparator: 
      di_factory: lib.evagg.content.HGVSVariantComparator
    variant_finder:
      # Default: Variant extraction via LLM
      di_factory: lib.evagg.content.LLMVariantFinder
      llm_client: "{{llm_client}}"
      # Alternative: MCP-based variant extraction (uncomment mcp_client above and use this instead)
      # di_factory: lib.evagg.content.MCPVariantFinder
      # mcp_client: "{{mcp_client}}"
      # tool_name: "extract_variants"
      # parameter_mapping:
      #   text: "text"
      #   gene_symbol: "gene_symbol"
writer:
  di_factory: lib.evagg.TableOutputWriter
  tsv_name: pipeline_benchmark
